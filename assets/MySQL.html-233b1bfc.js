import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o,c as r,b as s,d as n,a as e,e as t}from"./app-896701df.js";const p="/assets/image-1696034259992-34b88550.png",i="/assets/1730094511585-f30d3fa7.png",c="/assets/1730094649336-79f913dc.png",u="/assets/1730094657949-dc6c9f8c.png",k={},b=t('<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h1><h2 id="第01章-简介" tabindex="-1"><a class="header-anchor" href="#第01章-简介" aria-hidden="true">#</a> 第01章 简介</h2><p>MySQL是一个<strong>关系型数据库管理系统</strong>，由<strong>瑞典MySQL AB公司</strong>开发，属于<strong>Oracle</strong>旗下产品。MySQL是最流行的关系型数据管理系统之一，在 Web应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL所使用的SQL语言是用于访问数据库的最常用标准化语言。MySQL软件采用了双授权政策，其分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型和大型网站的开发都选择MySQL作为<strong>网站数据库。</strong></p><h2 id="第02章-作用" tabindex="-1"><a class="header-anchor" href="#第02章-作用" aria-hidden="true">#</a> 第02章 作用</h2><table><thead><tr><th style="text-align:left;">作用</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">数据共享</td><td style="text-align:left;">数据共享包含所有用户可同时存取数据库中的数据，也包括用户可以用各种方式通过接口使用数据库，并提供数据共享。</td></tr><tr><td style="text-align:left;">减少数据的冗余度</td><td style="text-align:left;">同文件系统相比，由于数据库实现了数据共享，从而避免了用户各自建立应用文件。减少了大量重复数据，减少了数据冗余，维护了数据的一致性。</td></tr><tr><td style="text-align:left;">数据的独立性</td><td style="text-align:left;">数据的独立性包括逻辑独立性(数据库的逻辑结构和应用程序相互独立)和物理独立性(数据物理结构的变化不影响数据的逻辑结构)。</td></tr><tr><td style="text-align:left;">数据实现集中控制</td><td style="text-align:left;">文件管理方式中，数据处于一种分散的状态，不同的用户或同一用户在不同处理中其文件之间毫无关系。利用数据库可对数据进行集中控制和管理，并通过数据模型表示各种数据的组织以及数据间的联系。</td></tr><tr><td style="text-align:left;">数据一致性和可维护性，以确保数据的安全性和可靠性</td><td style="text-align:left;">主要包括：①安全性控制：以防止数据丢失、错误更新和越权使用；②完整性控制：保证数据的正确性、有效性和相容性；③并发控制：使在同一时间周期内，允许对数据实现多路存取，又能防止用户之间的不正常交互作用。</td></tr><tr><td style="text-align:left;">故障恢复</td><td style="text-align:left;">由数据库管理系统提供一套方法，可及时发现故障和修复故障，从而防止数据被破坏。数据库系统能尽快恢复运行时出现的故障，可能是物理上或是逻辑上的错误。比如对系统的误操作造成的数据错误等。</td></tr></tbody></table><h2 id="第03章-概念" tabindex="-1"><a class="header-anchor" href="#第03章-概念" aria-hidden="true">#</a> 第03章 概念</h2><table><thead><tr><th>名称</th><th>说明</th><th>简称</th></tr></thead><tbody><tr><td>数据库</td><td>存储数据的仓库，数据是有组织的进行存储</td><td>DataBase(DB)</td></tr><tr><td>数据库管理系统</td><td>操纵和管理数据库的大型软件</td><td>DataBase Management System(DBMS)</td></tr><tr><td>SQL</td><td>操作关系型数据库的编程语言，定义了一套操作关系型数据库统一标准。</td><td>Structured Query Language(SQL)</td></tr></tbody></table><h2 id="第04章-关系型数据库" tabindex="-1"><a class="header-anchor" href="#第04章-关系型数据库" aria-hidden="true">#</a> 第04章 关系型数据库</h2><p><b style="color:#3e547d;">主流的关系型数据库</b></p><p><b style="color:#8f71e0;">关系型数据库实际就是二维表结构</b></p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第05章-官网" tabindex="-1"><a class="header-anchor" href="#第05章-官网" aria-hidden="true">#</a> 第05章 官网</h2>',12),v={href:"https://dev.mysql.com/downloads/installer/",target:"_blank",rel:"noopener noreferrer"},m=s("h2",{id:"第06章-安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#第06章-安装","aria-hidden":"true"},"#"),n(" 第06章 安装")],-1),g=s("p",null,[s("b",{style:{color:"#3e547d"}},[s("strong",null,"版本")])],-1),y=s("p",null,"社区版-免费",-1),h=s("p",null,"商业版",-1),w=s("p",null,[s("b",{style:{color:"#3e547d"}},[s("strong",null,"下载视频教程")])],-1),x={href:"https://www.bilibili.com/video/BV1Kr4y1i7ru/?p=3&spm_id_from=pageDriver&vd_source=549482551e5288f70f4ac8e71f20781e",target:"_blank",rel:"noopener noreferrer"},q=t(`<h2 id="第07章-基础篇" tabindex="-1"><a class="header-anchor" href="#第07章-基础篇" aria-hidden="true">#</a> 第07章 基础篇</h2><h3 id="mysql服务的启动和停止命令" tabindex="-1"><a class="header-anchor" href="#mysql服务的启动和停止命令" aria-hidden="true">#</a> MySQL服务的启动和停止命令</h3><div class="hint-container warning"><p class="hint-container-title">注意</p><p><b style="color:#8f71e0;">cmd要以管理员权限运行</b></p></div><table><thead><tr><th style="text-align:center;">动作</th><th style="text-align:center;">命令</th></tr></thead><tbody><tr><td style="text-align:center;">启动</td><td style="text-align:center;">net start mysql80</td></tr><tr><td style="text-align:center;">停止</td><td style="text-align:center;">net stop mysql80</td></tr></tbody></table><h3 id="通用语法" tabindex="-1"><a class="header-anchor" href="#通用语法" aria-hidden="true">#</a> 通用语法</h3><p>单行注释 <code>--</code> 或者 <code>#</code></p><p>多行注释 <code>/* */</code></p><p>SQL语句可以单行或多行书写，以分号结尾</p><p>SQL语句可以使用空格缩进来增强语句的可读性</p><p>MySQL数据库的<strong>SQL语句不区分大小写</strong>，关键字建议使用大写</p><p><b style="color:#3e547d;"><strong>分类</strong></b></p><table><thead><tr><th>分类</th><th>全称</th><th>说明</th></tr></thead><tbody><tr><td>DDL</td><td>Data Definition Language</td><td>数据定义语言，用来定义数据库对象(数据库、表、字段)</td></tr><tr><td>DML</td><td>Data Manipulation Language</td><td>数据操作语言，用来对数据库表中的数据进行增删改</td></tr><tr><td>DQL</td><td>Data Query Language</td><td>数据查询语言，用来查询数据库中表的记录</td></tr><tr><td>DCL</td><td>Data Control Language</td><td>数据控制语言，用来创建数据库用户、控制数据库的访问权限</td></tr></tbody></table><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h3><p><b style="color:#3e547d;"><strong>创建数据库</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 普通创建</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> xxx<span class="token punctuation">;</span>
<span class="token comment">// 如果没有则创建</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> xxx<span class="token punctuation">;</span>
<span class="token comment">// 创建数据库并且指定字符集为utf8mb4</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> xxx <span class="token keyword">default</span> <span class="token keyword">charset</span> utf8mb4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>使用数据库</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> xxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>删除数据库</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 普通删除</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> xxx<span class="token punctuation">;</span>
<span class="token comment">// 如果存在则删除</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> xxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>显示所有数据库：</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>显示当前使用的数据库</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="表操作" tabindex="-1"><a class="header-anchor" href="#表操作" aria-hidden="true">#</a> 表操作</h3><p><b style="color:#3e547d;"><strong>创建表</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>sys_role<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>sys_role<span class="token punctuation">\`</span></span> 
<span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;角色编号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>role_code<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;角色编码&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>role_name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;角色名称&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>create_user<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建人&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>update_time<span class="token punctuation">\`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;修改时间&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>remark<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;备注&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>is_delete<span class="token punctuation">\`</span></span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;是否删除(0-未删除，1-已删除)&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>COMMENT 注释<br> ENGINE 存储引擎<br> CHARSET 字符集<br> COLLATE 排序顺序</p><p><b style="color:#3e547d;"><strong>删除表</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 普通删除</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> xxx<span class="token punctuation">;</span>
<span class="token comment">// 如果存在则删除</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> xxx<span class="token punctuation">;</span>
<span class="token comment">// 删除指定表，并重新创建该表，此时表中就没有数据了</span>
<span class="token keyword">truncate</span> <span class="token keyword">table</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>修改表名</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">rename</span> <span class="token keyword">to</span> 新的表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>表中增加字段</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 字段 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> 注释 约束<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"> 修改表中字段的数据类型</b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 修改数据类型</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">modify</span> 字段名 新数据类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 修改字段名和字段类型</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 change 旧字段名 新字段名 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> 注释 约束<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>删除字段</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> 字段名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>查询表结构</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">desc</span> xxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>查询指定表的建表语句</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> xxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>查询当前数据库所有表</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>表中的数据类型</strong></b></p><table><thead><tr><th style="text-align:center;">名称</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">tinyint</td><td>整型</td><td>1 字节，范围 -128 到 127</td></tr><tr><td style="text-align:center;">smallint</td><td>整型</td><td>2 字节，范围 -32,768 到 32,767</td></tr><tr><td style="text-align:center;">mediumint</td><td>整型</td><td>3 字节，范围 -8,388,608 到 8,388,607</td></tr><tr><td style="text-align:center;">int</td><td>整型</td><td>4 字节，范围 -2,147,483,648 到 2,147,483,647 或 0 到 4,294,967,295</td></tr><tr><td style="text-align:center;">bigint</td><td>整型</td><td>8 字节，范围 -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td style="text-align:center;">float</td><td>浮点型</td><td>4 字节，单精度浮点数</td></tr><tr><td style="text-align:center;">double</td><td>浮点型</td><td>8 字节，双精度浮点数</td></tr><tr><td style="text-align:center;">decimal</td><td>定点型</td><td>指定精度和小数位数，例如 DECIMAL(10,2)表示一共10位，其中小数2位</td></tr><tr><td style="text-align:center;">char</td><td>字符型</td><td>固定长度字符串，最大 255 字节</td></tr><tr><td style="text-align:center;">varchar</td><td>字符型</td><td>可变长度字符串，最大 65,535 字节</td></tr><tr><td style="text-align:center;">text</td><td>字符型</td><td>可变长度字符串，最大 65,535 字节</td></tr><tr><td style="text-align:center;">tinytext</td><td>字符型</td><td>最大 255 字节的字符串</td></tr><tr><td style="text-align:center;">mediumtext</td><td>字符型</td><td>最大 16,777,215 字节的字符串</td></tr><tr><td style="text-align:center;">longtext</td><td>字符型</td><td>最大 4,294,967,295 字节的字符串</td></tr><tr><td style="text-align:center;">date</td><td>日期型</td><td>日期，格式为 &#39;YYYY-MM-DD&#39;</td></tr><tr><td style="text-align:center;">datetime</td><td>日期型</td><td>日期和时间，格式为 &#39;YYYY-MM-DD HH:MM:SS&#39;</td></tr><tr><td style="text-align:center;">timestamp</td><td>时间戳</td><td>格式与 datetime 相同</td></tr><tr><td style="text-align:center;">time</td><td>时间型</td><td>时间，格式为 &#39;HH:MM:SS&#39;</td></tr><tr><td style="text-align:center;">year</td><td>年型</td><td>年份，格式为 &#39;YYYY&#39;</td></tr><tr><td style="text-align:center;">binary</td><td>二进制</td><td>固定长度的二进制字符串，最大 255 字节</td></tr><tr><td style="text-align:center;">varbinary</td><td>二进制</td><td>可变长度的二进制字符串，最大 65,535 字节</td></tr><tr><td style="text-align:center;">blob</td><td>二进制</td><td>可变长度的二进制数据，最大 65,535 字节</td></tr><tr><td style="text-align:center;">tinyblob</td><td>二进制</td><td>最大 255 字节的二进制数据</td></tr><tr><td style="text-align:center;">mediumblob</td><td>二进制</td><td>最大 16,777,215 字节的二进制数据</td></tr><tr><td style="text-align:center;">longblob</td><td>二进制</td><td>最大 4,294,967,295 字节的二进制数据</td></tr><tr><td style="text-align:center;">enum</td><td>字符型</td><td>字符串对象，值为事先定义的枚举值之一</td></tr><tr><td style="text-align:center;">set</td><td>字符型</td><td>字符串对象，可以包含零个或多个事先定义的值</td></tr></tbody></table><h3 id="增加数据" tabindex="-1"><a class="header-anchor" href="#增加数据" aria-hidden="true">#</a> 增加数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 给指定字段添加数据</span>
<span class="token keyword">Insert</span> <span class="token keyword">into</span> 表名<span class="token punctuation">(</span>字段<span class="token number">1</span>，字段<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 给全部字段添加数据</span>
<span class="token keyword">Insert</span> <span class="token keyword">into</span> 表名 <span class="token keyword">values</span><span class="token punctuation">(</span>值<span class="token number">1</span>，值<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="修改数据" tabindex="-1"><a class="header-anchor" href="#修改数据" aria-hidden="true">#</a> 修改数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 字段名<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span>，字段名<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 查询表中所有数据</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 表名

<span class="token comment">// 查询表中指定字段名的数据</span>
<span class="token keyword">select</span>
	字段<span class="token number">1</span> <span class="token keyword">as</span> 别名<span class="token number">1</span><span class="token punctuation">,</span>
	字段<span class="token number">2</span><span class="token punctuation">,</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">from</span>
	表名

<span class="token comment">// 去重查找</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> 字段列表 <span class="token keyword">from</span> 表名<span class="token punctuation">;</span>

<span class="token comment">// 完整查询</span>
<span class="token keyword">select</span>
  字段列表
<span class="token keyword">from</span>
  表名列表
<span class="token keyword">where</span>
  条件列表
<span class="token keyword">group</span> <span class="token keyword">by</span>
  分组字段列表
<span class="token keyword">having</span>
  分组后条件列表
<span class="token keyword">order</span> <span class="token keyword">by</span>
  排序字段列表
<span class="token keyword">limit</span>
  分页参数
 
聚合函数 count max min avg sum
<span class="token keyword">select</span> 聚合函数<span class="token punctuation">(</span>字段列表<span class="token punctuation">)</span> <span class="token keyword">from</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>条件查询</strong></b></p><p>select 字段列表 from 表名 where 条件列表;</p><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !=</td><td>不等于</td></tr><tr><td>between...and...</td><td>在某个范围之内(含最小值、最大值)</td></tr><tr><td>in(...)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>like 占位符</td><td>模糊匹配( &#39;_&#39; 匹配单个字符，&#39;%&#39; 匹配任意个字符)</td></tr><tr><td>is null</td><td>是null</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>and 或 &amp;&amp;</td><td>并且(多个条件同时成立)</td></tr><tr><td>or 或 ||</td><td>或者(多个条件任意一个成立)</td></tr><tr><td>not 或 !</td><td>非 不是</td></tr></tbody></table><p><b style="color:#3e547d;"><strong>分组查询</strong></b></p><p>select 字段列表 from 表名 where 条件 group by 分组字段名 having 分组后过滤条件;</p><p>where与having区别</p><p>执行时机不同：where是分组前进行过滤，不满足where条件不参与分组，having是分组之后对结果进行过滤</p><p>判断条件不同：where不能对聚合函数进行判断，而having可以</p><p><b style="color:#3e547d;"><strong>排序查询</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名 <span class="token keyword">order</span> <span class="token keyword">by</span> 字段<span class="token number">1</span> 排序方式<span class="token number">1</span>，字段<span class="token number">2</span> 排序方式<span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">asc</span> 升序<span class="token operator">-</span>默认值
<span class="token keyword">desc</span> 降序
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>分页查询</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名 <span class="token keyword">limit</span> 起始索引，查询记录数<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>多表查询</strong></b></p><p><b style="color:#6E8B74;"><strong>多表关系</strong></b></p><table><thead><tr><th>关系</th><th>建立表的规则</th></tr></thead><tbody><tr><td>一对一</td><td>任意选取一方建立外键</td></tr><tr><td>一对多</td><td>在多的一方建立外键</td></tr><tr><td>多对多</td><td>建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">//笛卡尔积</span>
<span class="token comment">//产生的数据为emp的数量乘以dept的数量</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">,</span> dept<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>连接方式</strong></b></p><table><thead><tr><th style="text-align:center;">连接方式</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;">内连接</td><td style="text-align:center;">相当于查询A B交集的部分数据</td></tr><tr><td style="text-align:center;">左外连接</td><td style="text-align:center;">查询左表所有数据，以及两张表交集部分数据</td></tr><tr><td style="text-align:center;">右外连接</td><td style="text-align:center;">查询右表所有数据，以及两张表交集部分数据</td></tr><tr><td style="text-align:center;">自连接</td><td style="text-align:center;">当前表与自身的连接查询，自连接必须使用表别名</td></tr></tbody></table><p><b style="color:#5CB3CC;"><strong>内连接</strong></b></p><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><b style="color:#F8BFB5;"><strong>隐式内连接</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span>，表<span class="token number">2</span> <span class="token keyword">where</span> 条件；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#F8BFB5;"><strong>显式内连接</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#5CB3CC;"><strong>左外连接</strong></b></p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">left</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#5CB3CC;"><strong>右外连接</strong></b></p><figure><img src="`+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">right</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#5CB3CC;"><strong>自连接</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表A 别名A <span class="token keyword">join</span> 表A 别名B <span class="token keyword">on</span> 条<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p><b style="color:#3e547d;"><strong>联合查询</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表A <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">union</span> <span class="token punctuation">[</span><span class="token keyword">all</span><span class="token punctuation">]</span>
<span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表B <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

单独的<span class="token keyword">union</span>会去重
<span class="token keyword">union</span> <span class="token keyword">all</span> 不会去重
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><b style="color:#3e547d;"><strong>子查询</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t1 <span class="token keyword">where</span> column1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> column1 <span class="token keyword">from</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="元数据表" tabindex="-1"><a class="header-anchor" href="#元数据表" aria-hidden="true">#</a> 元数据表</h3><p>MySQL自带<strong>元数据库</strong>，保存了关于<strong>数据库表、列、约束</strong>等系统信息。它里面的内容不是用户数据，而是MySQL内部的<strong>数据字典</strong>。</p><table><thead><tr><th>表名</th><th>存放内容</th></tr></thead><tbody><tr><td>information_schema.tables</td><td>存放所有数据库的表信息(包括视图)</td></tr><tr><td>information_schema.columns</td><td>存放表中每个列的信息</td></tr><tr><td>information_schema.schemata</td><td>存放所有数据库的信息</td></tr></tbody></table><div class="language-sq1 line-numbers-mode" data-ext="sq1"><pre class="language-sq1"><code>// information_schema.tables中的常用字段如下
table_schema 表所在的数据库名
table_name 表名
table_type 表类型(BASE TABLE / VIEW)
engine 存储引擎
table_rows 表中行数
create_time 创建时间
update_time 最后更新时间

// information_schema.columns中的常用字段如下
table_schema 数据库名
table_name 表名
column_name 列名
data_type 数据类型 (int, varchar, date 等)
character_maximum_length 字符串最大长度
is_nullable 是否允许 NULL
column_default 默认值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 使用场景：生成一个数据库中所有表的删除语句</span>
<span class="token keyword">SELECT</span>
	CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TABLE &#39;</span><span class="token punctuation">,</span> table_name<span class="token punctuation">,</span> <span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
	information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
<span class="token keyword">WHERE</span>
	table_schema <span class="token operator">=</span> <span class="token string">&#39;your_database&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 使用场景：查找一个数据库中所有以design开头的表名</span>
<span class="token keyword">SELECT</span>
	table_name
<span class="token keyword">FROM</span>
	information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
<span class="token keyword">WHERE</span>
	table_schema <span class="token operator">=</span> <span class="token string">&#39;your_database&#39;</span>
  	<span class="token operator">AND</span> table_name <span class="token operator">LIKE</span> <span class="token string">&#39;design%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 使用场景：查找包含某个字段名的表</span>
<span class="token keyword">SELECT</span>
	table_name<span class="token punctuation">,</span>
	column_name
<span class="token keyword">FROM</span>
	information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span>
<span class="token keyword">WHERE</span>
	table_schema <span class="token operator">=</span> <span class="token string">&#39;your_database&#39;</span>
  	<span class="token operator">AND</span> column_name <span class="token operator">=</span> <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多使用场景具体看自己的需求</p><h3 id="管理用户" tabindex="-1"><a class="header-anchor" href="#管理用户" aria-hidden="true">#</a> 管理用户</h3><p><b style="color:#3e547d;"><strong>查询用户</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> mysql<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>创建用户</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">user</span> ‘用户名’@‘主机名’ identified <span class="token keyword">by</span> ‘密码’；
主机名为localhost则只能在当前主机访问
主机名为<span class="token operator">%</span>则可以在任意主机访问该数据库
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>修改用户密码</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">user</span> ‘用户名’@‘主机名’ identified <span class="token keyword">with</span> mysql_native_password <span class="token keyword">by</span> ‘新密码’；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>删除用户</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">user</span> ‘用户名’@‘主机名’；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="权限控制" tabindex="-1"><a class="header-anchor" href="#权限控制" aria-hidden="true">#</a> 权限控制</h3><p><b style="color:#3e547d;"><strong>查询权限</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> grants <span class="token keyword">for</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>授予权限</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">grant</span> 权限列表 <span class="token keyword">on</span> 数据库<span class="token punctuation">.</span>表名 <span class="token keyword">to</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>撤销权限</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">revoke</span> 权限列表 <span class="token keyword">on</span> 数据库名<span class="token punctuation">.</span>表名 <span class="token keyword">from</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span>
数据库<span class="token punctuation">.</span><span class="token operator">*</span> 表示所有表
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3><p><b style="color:#3e547d;"><strong>字符串函数</strong></b></p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>concat(S1, S2, ...Sn)</td><td>字符串拼接，将S1, S2, ...Sn拼接成一个字符串</td></tr><tr><td>lower(str)</td><td>将字符串str全部转为小写</td></tr><tr><td>upper(str)</td><td>将字符串str全部转为大写</td></tr><tr><td>lpad(str, n, pad)</td><td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>rpad(str, n, pad)</td><td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>trim(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>substring(str, start, len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr></tbody></table><p>例子</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>将企业员工的工号不足五位的在前面补<span class="token number">0</span><span class="token punctuation">,</span>
<span class="token keyword">update</span> emp <span class="token keyword">set</span> workno <span class="token operator">=</span> lpad<span class="token punctuation">(</span>workno<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>数值函数</strong></b></p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>ceil(x)</td><td>向上取整</td></tr><tr><td>floor(x)</td><td>向下取整</td></tr><tr><td>mod(x, y)</td><td>返回x%y</td></tr><tr><td>rand()</td><td>返回0~1内的随机数</td></tr><tr><td>round(x, y)</td><td>求参数x的四舍五入的值，保留y位小数</td></tr></tbody></table><p><b style="color:#3e547d;"><strong>日期函数</strong></b></p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>curdate()</td><td>返回当前日期</td></tr><tr><td>curtime()</td><td>返回当前时间</td></tr><tr><td>now()</td><td>返回当前日期和时间</td></tr><tr><td>year(date)</td><td>获取指定date的年份</td></tr><tr><td>month(date)</td><td>获取指定date的月份</td></tr><tr><td>day(date)</td><td>获取指定date的日期</td></tr><tr><td>date_add(date, interval expr type)</td><td>返回一个日期/时间值加上一个时间间隔expr后的时间值</td></tr><tr><td>datediff(dateOne, dateTwo)</td><td>返回起始时间dateOne和结束时间dateTwo之间的天数</td></tr></tbody></table><p><b style="color:#3e547d;"><strong>流程控制函数</strong></b></p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>if(value, t, f)</td><td>如果value为true, 则返回t, 否则返回f</td></tr><tr><td>ifnull(valueOne, valueTwo)</td><td>如果valueOne不为空，返回valueOne，否则返回valueTwo</td></tr><tr><td>case when [val1] then [res1] ...else [default] end</td><td>如果val1为true，返回res1，...否则返回default默认值</td></tr><tr><td>case [expr] when [val1] then [res1] ...else [default] end</td><td>如果expr的值等于val1，返回res1，...否则返回default默认值</td></tr></tbody></table><h3 id="约束" tabindex="-1"><a class="header-anchor" href="#约束" aria-hidden="true">#</a> 约束</h3><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段都数据不能为null</td><td>not null</td></tr><tr><td>唯一约束</td><td>保证该字段的所有数据都是唯一、不重复的</td><td>unique</td></tr><tr><td>主键约束</td><td>主键是一行数据到唯一标识，要求非空且唯一</td><td>primary key</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段的值，则采用默认值</td><td>default</td></tr><tr><td>检查约束(8.0.16版本之后)</td><td>保证字段值满足某一条件</td><td>check</td></tr><tr><td>外键约束</td><td>用来让两张表的数据之间建立连接，保证数据的一致性和完整性</td><td>foreign key</td></tr></tbody></table><h3 id="事务" tabindex="-1"><a class="header-anchor" href="#事务" aria-hidden="true">#</a> 事务</h3><p><b style="color:#3e547d;"><strong>简介</strong></b></p><p>事物是一组操作的集合，它是一个不可分割的工作单位，事物会把所有的操作作为一个整体一起向系统提交或撤销操作请求，既这些操作要么同时成功，要么同时失败。</p><p><b style="color:#3e547d;"><strong>案例</strong></b></p><p>转账业务中的A向B转账，需要A账户的余额减的同时B账户的余额加，这是捆绑操作，要么同时失败，要么同时成功。</p><p><b style="color:#3e547d;"><strong>查看事务提交方式</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span>
结果为<span class="token number">1</span>则是自动提交 为<span class="token number">0</span>则是手动提交
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>设置事务提交方式</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> @<span class="token variable">@autocommit</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>开始事务</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">start</span> transactiono； 或 <span class="token keyword">begin</span>；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>提交事务</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">commit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>回滚事务</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">rollback</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>事务四大特性</strong></b></p><table><thead><tr><th style="text-align:center;">特性</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;">原子性</td><td style="text-align:center;">事务是不可分割的最小单元，要么全部成功要么全部失败</td></tr><tr><td style="text-align:center;">一致性</td><td style="text-align:center;">事务完成时，必须是所有的数据都保持一致状态</td></tr><tr><td style="text-align:center;">隔离性</td><td style="text-align:center;">数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</td></tr><tr><td style="text-align:center;">持久性</td><td style="text-align:center;">事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</td></tr></tbody></table><p><b style="color:#3e547d;"><strong>并发事务问题</strong></b></p><table><thead><tr><th>问题</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td>脏读</td><td style="text-align:center;">一个事务读到另外一个事务还没有提交的数据</td></tr><tr><td>不可重复读</td><td style="text-align:center;">一个事务先后读取同一条记录，但两次读取的数据不同，称之为不可重复读。</td></tr><tr><td>幻读</td><td style="text-align:center;">一个事务按照条件查询数据时，没有对应的数据行，但是在插入数据时，又发现这行数据已经存在，好像出现了幻影。</td></tr></tbody></table><p><b style="color:#3e547d;"><strong>事务隔离级别</strong></b></p><p><b style="color:#6E8B74;"><strong>作用</strong></b></p><p>解决三种并发事务问题</p><p><b style="color:#6E8B74;"><strong>四种隔离级别</strong></b></p><table><thead><tr><th><strong>隔离级别</strong></th><th><strong>脏读</strong></th><th><strong>不可重复读</strong></th><th><strong>幻读</strong></th></tr></thead><tbody><tr><td>读未提交</td><td>√</td><td>√</td><td>√</td></tr><tr><td>读已提交 (Oracle默认)</td><td>×</td><td>√</td><td>√</td></tr><tr><td>可重复读 (MySql默认)</td><td>×</td><td>×</td><td>√</td></tr><tr><td>串行化</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><p>√ 表示存在问题</p><p><b style="color:#6E8B74;"><strong>查看事务的隔离级别</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> @<span class="token variable">@transaction_isolation</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>设置事务的隔离级别</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token punctuation">[</span><span class="token keyword">session</span> <span class="token operator">|</span> <span class="token keyword">global</span><span class="token punctuation">]</span> <span class="token keyword">transaction</span> <span class="token keyword">isolation</span> <span class="token keyword">level</span>
{<span class="token keyword">read</span> <span class="token keyword">uncommitted</span><span class="token operator">|</span><span class="token keyword">read</span> <span class="token keyword">committed</span><span class="token operator">|</span><span class="token keyword">repeatable</span> <span class="token keyword">read</span><span class="token operator">|</span><span class="token keyword">serializable</span>}
<span class="token comment">//session 当前会话窗口</span>
<span class="token comment">//global 全部会话窗口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第08章-进阶篇" tabindex="-1"><a class="header-anchor" href="#第08章-进阶篇" aria-hidden="true">#</a> 第08章 进阶篇</h2><h3 id="存储引擎" tabindex="-1"><a class="header-anchor" href="#存储引擎" aria-hidden="true">#</a> 存储引擎</h3><p><b style="color:#3e547d;"><strong>MySql默认存储引擎InnoDB</strong></b></p><p><b style="color:#6E8B74;"><strong>介绍</strong></b></p><p>MySql默认存储引擎：InnoDB</p><p>InnoDB是一种兼顾高可靠性和高性能的通用存储引擎，在MySql 5.5之后，InnoBD是默认的MySql存储引擎。之前是MyISAM存储引擎。</p><p><b style="color:#6E8B74;"><strong>特点</strong></b></p><ol><li>DML(增删改查)操作遵循ACID(原子性 一致性 隔离性 持久性)模型，<strong>支持事务</strong></li><li><strong>行级锁</strong>，提高并发访问性能</li><li><strong>支持外键</strong> foreign key 约束，保证数据的完整性和正确性</li></ol><p><b style="color:#6E8B74;"><strong>文件</strong></b></p><p>xxx.ibd：xxx表示表名</p><p>InnoDB引擎的每张表都会对应这样一个表空间文件，存储该表的表结构(frm，sdi)、数据和索引</p><p><b style="color:#3e547d;"><strong>存储引擎简介</strong></b></p><p><strong>引擎就是发动机</strong>，不同的事物使用的引擎不同就比如坦克用不了战斗机的引擎。存储引擎就是储存数据，建立索引，更新查询数据等技术的实现方式。不同的存储引擎对于这些技术的实现是不同的。存储引擎是基于表的，而不是库，所有存储引擎也可被称为表类型。</p><p><b style="color:#6E8B74;"><strong>在创建表时，指定存储引擎</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">InnoDB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>查看当前数据库支持的存储引擎</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> engines<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>MySql体系结构</strong></b></p><p><b style="color:#6E8B74;"><strong>连接层</strong></b></p><p>最上层是一些客户端和链接服务，主要完成一些类似于连接处理，授权认证及相关的安全方案。服务器也会为安全接入的每个客户端 验证它所具有的操作权限。</p><p><b style="color:#6E8B74;"><strong>服务层</strong></b></p><p>第二层架构主要完成大多数的核心服务功能，如SQL接口，并完成缓存的查询，SQL的分析和优化，部分内置函数的执行。所有跨存储引擎的功能也在这一层实现，如过程，函数等。</p><p><b style="color:#6E8B74;"><strong>引擎层</strong></b></p><p>存储引擎真正的负责了MySql中数据的存储和提取，服务器通过API和存储引擎进行通信。不同的存储引擎具有不同的功能，可以根据需要选取合适的存储引擎。</p><p><b style="color:#6E8B74;"><strong>存储层</strong></b></p><p>主要是将数据存储在文件系统之上，并完成与存储引擎的交互。</p><h3 id="索引" tabindex="-1"><a class="header-anchor" href="#索引" aria-hidden="true">#</a> 索引</h3><p><b style="color:#3e547d;"><strong>介绍</strong></b></p><p>索引(index) 是帮助MySql<strong>高效获取数据的数据结构</strong>(有序)。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用数据，这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引。</p><p><b style="color:#3e547d;"><strong>优缺点</strong></b></p><p><b style="color:#6E8B74;"><strong>优点</strong></b></p><p>提高数据检索的效率，降低数据库的IO成本。通过索引列对数据进行排序，，降低数据排序成本，降低CPU的消耗。</p><p><b style="color:#6E8B74;"><strong>缺点</strong></b></p><p>索引列需要占据空间，索引大大提高了查询效率，同时也降低更新表的速度，如对表进行insert，update，delete时，效率降低。</p><p><b style="color:#3e547d;"><strong>索引结构</strong></b></p><table><thead><tr><th>索引结构</th><th>描述</th></tr></thead><tbody><tr><td>B+Tree索引</td><td>最常见的索引类型，大部分引擎都支持B+Tree索引</td></tr><tr><td>Hash索引</td><td>底层数据结构是用哈希表实现的，只有精确匹配索引列的查询才有效，不支持范围查询</td></tr><tr><td>R+Tree(空间索引)</td><td>空间索引是MyISAM引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td></tr><tr><td>Full-text(全文索引)</td><td>是一种通过建立倒排索引，快速匹配文档的方式，类似于Lucene，Solr，ES</td></tr></tbody></table><table><thead><tr><th>索引</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>B+tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>R-tree索引</td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>Full-text</td><td>5.6版本之后支持</td><td>支持</td><td>不支持</td></tr></tbody></table><details class="hint-container details"><summary><b style="color:#bf3e73;">问：为什么InnoDB存储引擎选择使用B+tree索引结构</b></summary><p><b style="color:#f19977;">答：相对于二叉树，层级更少，搜索效率高。对于B-tree树，无论是叶子节点，还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，要同样保存大量数据，只能增加树的高度，导致性能降低。相对于Hash索引，B+tree支持范围匹配及排序操作。</b></p></details><p><b style="color:#3e547d;"><strong>索引分类</strong></b></p><table><thead><tr><th>分类</th><th>含义</th><th>特点</th><th>关键字</th></tr></thead><tbody><tr><td>主键索引</td><td>针对于表中主键创建的索引</td><td>默认自动创建，只能有一个</td><td>primary</td></tr><tr><td>唯一索引</td><td>避免同一个表中某数据列中的值重复</td><td>可以有多个</td><td>unique</td></tr><tr><td>常规索引</td><td>快速定位特定数据</td><td>可以有多个</td><td></td></tr><tr><td>全文索引</td><td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td><td>可以有多个</td><td>fulltext</td></tr></tbody></table><p><b style="color:#3e547d;"><strong>索引语法</strong></b></p><p><b style="color:#6E8B74;"><strong>创建索引</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token punctuation">[</span><span class="token keyword">unique</span><span class="token operator">|</span>fulltext<span class="token punctuation">]</span> <span class="token keyword">index</span> index_name <span class="token keyword">on</span> table_name<span class="token punctuation">(</span>index_col_name<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">unique</span> <span class="token operator">|</span> fulltext 选择索引类型
index_name 为索引起名
table_name 表名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>查看索引</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> table_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>删除索引</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">index</span> index_name <span class="token keyword">on</span> table_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="sql性能分析" tabindex="-1"><a class="header-anchor" href="#sql性能分析" aria-hidden="true">#</a> SQL性能分析</h3><p><b style="color:#3e547d;"><strong>SQL执行频率</strong></b></p><p>MySql客户端连接成功之后，通过命令可以提供服务器状态信息。通过如下指令，可以查看当前数据库的insert，update，delete，select的访问频次</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token punctuation">[</span><span class="token keyword">global</span><span class="token operator">|</span><span class="token keyword">session</span><span class="token punctuation">]</span> <span class="token keyword">status</span> <span class="token operator">like</span> <span class="token string">&#39;com_______&#39;</span><span class="token punctuation">;</span> <span class="token comment">//com后面七个下划线</span>
<span class="token keyword">global</span><span class="token operator">|</span><span class="token keyword">session</span> 全局或者是当前会话
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>慢查询日志</strong></b></p><p>慢查询日志记录了所有执行时间超过指定参数(long_query_time,单位：秒,默认10秒)的所有SQL语句的日志。MySql的慢查询日志默认没有开启，需要在MySql的配置文件(/etc/my.cnf)中配置如下信息:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 开启MySQL慢日志查询开关</span>
slow_query_log <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">// 设置慢日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志</span>
long_query_time <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>查看慢日志是否开启</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;slow_query_log&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>profile</strong></b></p><p>帮助我们了解执行SQL语句时的时间都耗费到哪里去了。</p><p><b style="color:#6E8B74;"><strong>查看当前数据库是否支持profile</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> @<span class="token variable">@have_profiling</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>查看是否开启profile</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> @<span class="token variable">@profiling</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>开启profile</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> profiling <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#6E8B74;"><strong>查看所有SQL语句的耗时情况</strong></b></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> profiles<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>explain执行计划</strong></b></p><p>explain或者desc命令获取MySql如何执行select语句的信息，包括在select语句执行过程中表如何连接和连接的顺序。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
<span class="token keyword">desc</span> <span class="token keyword">select</span> 字段列表 <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><b style="color:#3e547d;"><strong>最左前缀法则</strong></b></p><p>如果索引了多列，要遵循最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。如果跳跃某一列。索引将部分失效(后面的字段索引失效)</p><p><b style="color:#3e547d;"><strong>索引失效</strong></b></p><p>不要在索引列上进行运算操作，索引将失效。</p><p>字符串类型字段使用时，不加引号，索引将失效。</p>`,230);function f(_,E){const a=d("ExternalLinkIcon");return o(),r("div",null,[b,s("p",null,[n("下载地址："),s("a",v,[n("https://dev.mysql.com/downloads/installer/"),e(a)])]),m,g,y,h,w,s("p",null,[s("a",x,[n("03. 基础-概述-MySQL安装及启动_哔哩哔哩_bilibili"),e(a)])]),q])}const S=l(k,[["render",f],["__file","MySQL.html.vue"]]);export{S as default};
