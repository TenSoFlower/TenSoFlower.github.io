const e=JSON.parse('{"key":"v-5a41be9e","path":"/MyNotes/Promise.html","title":"Promise","lang":"zh-CN","frontmatter":{"icon":"/icon/catppuccin--package-json.svg","date":"2025-08-14T00:00:00.000Z","category":["前端"],"footer":"雄关漫道真如铁, 而今迈步从头越。","tag":["Promise"],"description":"Promise 第一章 简介 Promise最初被提出是在E语言中，它是基于并列或者并行处理设计的一种编程语言。Promise 是JavaScript中处理异步操作的一种方式，它代表了一个可能尚未完成操作的最终完成或者失败的结果值。Promise 对象的主要目的是提供一种更加灵活的可管理方式来处理异步代码，避免回调地狱(callback hell)，使得代码更加清晰和易于维护。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/MyNotes/Promise.html"}],["meta",{"property":"og:site_name","content":"TenSoFlowBlog"}],["meta",{"property":"og:title","content":"Promise"}],["meta",{"property":"og:description","content":"Promise 第一章 简介 Promise最初被提出是在E语言中，它是基于并列或者并行处理设计的一种编程语言。Promise 是JavaScript中处理异步操作的一种方式，它代表了一个可能尚未完成操作的最终完成或者失败的结果值。Promise 对象的主要目的是提供一种更加灵活的可管理方式来处理异步代码，避免回调地狱(callback hell)，使得代码更加清晰和易于维护。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-05T06:13:50.000Z"}],["meta",{"property":"article:author","content":"TenSoFlow"}],["meta",{"property":"article:tag","content":"Promise"}],["meta",{"property":"article:published_time","content":"2025-08-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-05T06:13:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Promise\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-05T06:13:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TenSoFlow\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"第一章 简介","slug":"第一章-简介","link":"#第一章-简介","children":[]},{"level":2,"title":"第二章 创建","slug":"第二章-创建","link":"#第二章-创建","children":[]},{"level":2,"title":"第三章 常用方法","slug":"第三章-常用方法","link":"#第三章-常用方法","children":[{"level":3,"title":"then()","slug":"then","link":"#then","children":[]},{"level":3,"title":"catch()","slug":"catch","link":"#catch","children":[]},{"level":3,"title":"finally()","slug":"finally","link":"#finally","children":[]},{"level":3,"title":"all()","slug":"all","link":"#all","children":[]}]},{"level":2,"title":"第四章 静态方法","slug":"第四章-静态方法","link":"#第四章-静态方法","children":[{"level":3,"title":"Promise.resolve()","slug":"promise-resolve","link":"#promise-resolve","children":[]},{"level":3,"title":"Promise.reject()","slug":"promise-reject","link":"#promise-reject","children":[]}]},{"level":2,"title":"第五章 async | await","slug":"第五章-async-await","link":"#第五章-async-await","children":[]}],"git":{"createdTime":1739188670000,"updatedTime":1757052830000,"contributors":[{"name":"曹卫民","email":"1413468037@qq.com","commits":3},{"name":"曹卫民","email":"1413468037@gitee.com","commits":1}]},"readingTime":{"minutes":5.79,"words":1736},"filePathRelative":"MyNotes/Promise.md","localizedDate":"2025年8月14日","excerpt":"<h1> Promise</h1>\\n<h2> 第一章 简介</h2>\\n<p><code>Promise</code>最初被提出是在<strong>E语言</strong>中，它是基于并列或者并行处理设计的一种编程语言。<code>Promise</code> 是JavaScript中<strong>处理异步操作</strong>的一种方式，它代表了一个可能尚未完成操作的最终完成或者失败的结果值。<code>Promise</code> 对象的主要目的是提供一种更加灵活的可管理方式来处理异步代码，<strong>避免回调地狱</strong>(callback hell)，使得代码更加清晰和易于维护。</p>","copyright":{"author":"TenSoFlow","license":"MIT"},"autoDesc":true}');export{e as data};
